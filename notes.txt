Събирам идеи как най-хитро може да се направи да се използва с различни конфигурации едновременно т.е все едно да има ukfCfg1, ukfCfg2, които описват различни системи за филтрация и имат различни дименсии на матриците съответно.


Значи гледа сега има един файл който е с алгоритъма на филтъра ukfLib.c. Има друг файл, който е с конфигурацията за съответната реална система за която искаме да приложим калман филтъра ukfCfg. Този файл съдържа уравнения и матрици необходими на филтъра за да работи и е специфичен/различен за всеки филтър


Както е реализирано в момента тази библиотека работи само за един ukfCfg файл


ако се появи задача в която библиотеката трябва да се ползва за филтрация на две системи не може да се ползва, както е направен


проблема е че размерностите на матриците могат да са различни за различни уравнения


аз си мислех за структура с конфигурации


ukfStruct[cfg1...cfgn].Matrix1[size]


обаче size няма да е еднакъв и незнам дали ще стане


втория вариант е може би да има различни ukfCfg.c файлове по един за всяка система. Тогава ще е по лесно за преработване, но ще трябва да се мислят различни имена за матриците, които не са малко и може да стане фал


В ukf_test(void) има симулация на ~15 итерации на филтъра за примерна система, за която са изчислени референтни калкулации от матлаба.  Направил съм и s-fun с която кода на филтъра се импортва за тестване в simulink.  Така е по лесно да се симулира и изследва поведението за повече итерации на филтъра


между ред 201-250 (test2.c) е инизиализацията за системата дефинирана в ukfCfg.c

